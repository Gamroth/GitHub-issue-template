@charset "UTF-8";@import url(https://fonts.googleapis.com/css?family=Roboto);@font-face{font-family:el_passion_github;src:url(../fonts/el_passion_github.eot);src:url(../fonts/el_passion_github.eot) format("embedded-opentype"),url(../fonts/el_passion_github.ttf) format("truetype"),url(../fonts/el_passion_github.woff) format("woff"),url(../fonts/el_passion_github.svg) format("svg");font-weight:400;font-style:normal}i{font-family:el_passion_github!important;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-star:before{content:""}.icon-star.active:before,.item-action.active i:before,.item-action:hover i:before{content:""}.icon-issue:before{content:""}.icon-github:before{content:""}.icon-open-issue:before{content:""}*{box-sizing:border-box}ul{margin:0;padding:0;list-style:none}.d-flex{display:-webkit-box!important;display:-ms-flexbox!important;display:flex!important}.flex-row{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.justify-content-center{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.align-items-center{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.h-100{height:100%!important}body,html{height:100%}body{margin:0;background-image:url(../img/assets/background.jpg);background-size:cover;background-position:left 83% center;font-family:Roboto,sans-serif}.window{width:650px;min-width:650px;height:500px;min-height:500px;overflow:hidden;border-radius:10px;box-shadow:0 0 15px 0 rgba(0,0,0,.5)}.window-controls{width:100%;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;padding:10px;background-color:#100f22;border-top-left-radius:10px;opacity:1}.window-controls .control{height:10px;width:10px;margin:5px;border-radius:50%}.window-controls .control-close{background-color:#ff594f}.window-controls .control-minimize{background-color:#ffbb1b}.window-controls .control-maximize{background-color:#00cd45}.nav-item-link,.sidebar,.window-controls{display:-webkit-box;display:-ms-flexbox;display:flex}.sidebar{height:100%;width:150px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;overflow:hidden}.sidebar .sidebar-items-list{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;position:relative}.sidebar .sidebar-items-list:before{content:"";display:block;position:absolute;top:0;left:0;bottom:0;right:0;opacity:.8;z-index:-1;background:#100f22}.sidebar .sidebar-items-list:after{content:"";z-index:-2;position:absolute;-webkit-filter:blur(5px);filter:blur(5px);background-image:url(../img/assets/background.jpg);width:100vw;height:100vw;background-size:cover;background-position:left 83% center}.nav-item-link{color:#fff;text-decoration:none;font-size:14px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:15px 17px;transition:.3s}.nav-item-link:hover,.nav-item.active .nav-item-link{background-color:#292a48}.nav-item-title i{font-size:16px;padding-right:5px}.nav-item-counter{color:#8a8995}.content{height:100%;width:500px;background-color:#f6f6f6;padding:10px 0;overflow:hidden}.content .vertical-scroll{height:100%;width:100%;padding:0 10px 0 15px;overflow-x:hidden;overflow-y:scroll}.content .vertical-scroll::-webkit-scrollbar{-webkit-appearance:none}.content .vertical-scroll::-webkit-scrollbar:horizontal,.content .vertical-scroll::-webkit-scrollbar:vertical{width:10px}.content .vertical-scroll::-webkit-scrollbar-thumb{border-radius:10px;border:3px solid #f6f6f6;background-color:#e0e0e0}.items-list{height:100%;width:100%}.items-group-title{display:block;font-size:12px;color:#8a8995;margin-bottom:5px}.item{border:1px solid #e0e0e0;border-radius:5px;background-color:#fff;width:100%;padding:11px 12px 10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin:5px 0}.item-name{color:#080606;font-size:15px}.item-action,.item-name{line-height:1}.item-action i{font-size:16px;line-height:1;color:#e0e0e0;transition:.3s}.item-action.active i{color:#21233d}@media screen and (max-width:650px){body>.container{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}}@media screen and (max-height:500px){body>.container{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
